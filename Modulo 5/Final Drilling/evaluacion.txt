-- 1. Consultas para insertar, modificar y eliminar un Customer, Staff y Actor
-- Insertar un Customer:

INSERT INTO customer (first_name, last_name, email, address_id, store_id, active, create_date)
VALUES ('Dario', 'Osorio', 'viva@chile.cl', 5, 1, true, CURRENT_DATE);

-- Modificar un Customer:

UPDATE customer
SET email = 'nuevocorreo@example.com', active = false
WHERE customer_id = 1;


-- Eliminar un Customer:

DELETE FROM customer WHERE customer_id = 1;
Las mismas consultas se aplican para Staff y Actor cambiando el nombre de las tablas.

-- Insertar un Staff:

INSERT INTO staff (first_name, last_name, address_id, email, store_id, username, password, active, hire_date)
VALUES ('Marcelo', 'Salas', 3, 'matador@gmail.com', 1, 'msalas', 'clave123', true, CURRENT_DATE);


--Modificar un Staff:

-- UPDATE staff
SET email = 'nuevostaffemail@ejemplo.com'
WHERE staff_id = 1;


-- Eliminar un Staff:

DELETE FROM staff WHERE staff_id = 1;


-- Insertar un Actor:

INSERT INTO actor (first_name, last_name)
VALUES ('Pancho', 'Melo');


-- Modificar un Actor:


UPDATE actor
SET last_name = 'NewLastName'
WHERE actor_id = 1;


-- Eliminar un Actor:


DELETE FROM actor WHERE actor_id = 1;


-- 2. Listar todas las “rental” con los datos del “customer” dado un año y mes

SELECT rental.rental_id, rental.rental_date, customer.first_name, customer.last_name
FROM rental
JOIN customer ON rental.customer_id = customer.customer_id
WHERE EXTRACT(YEAR FROM rental.rental_date) = 2023
AND EXTRACT(MONTH FROM rental.rental_date) = 9;


-- 3. Listar Número, Fecha (payment_date) y Total (amount) de todas las “payment”

SELECT payment.payment_id, payment.payment_date, payment.amount
FROM payment;


-- 4. Listar todas las “film” del año 2006 que contengan un rental_rate mayor a 4.0

SELECT film.title, film.rental_rate
FROM film
WHERE EXTRACT(YEAR FROM film.release_year) = 2006
AND film.rental_rate > 4.0;



-- 5. Realiza un Diccionario de datos que contenga el nombre de las tablas y columnas, si éstas pueden ser nulas, y su tipo de dato correspondiente. 

SELECT
    t1.TABLE_NAME AS tabla_nombre,
    t1.COLUMN_NAME AS columna_nombre,
    t1.COLUMN_DEFAULT AS columna_defecto,
    t1.IS_NULLABLE AS columna_nulo,
    t1.DATA_TYPE AS columna_tipo_dato,
    COALESCE(t1.NUMERIC_PRECISION,
    t1.CHARACTER_MAXIMUM_LENGTH) AS columna_longitud,
    PG_CATALOG.COL_DESCRIPTION(t2.OID,
    t1.DTD_IDENTIFIER::int) AS columna_descripcion,
    t1.DOMAIN_NAME AS columna_dominio
FROM 
    INFORMATION_SCHEMA.COLUMNS t1
    INNER JOIN PG_CLASS t2 ON (t2.RELNAME = t1.TABLE_NAME)
WHERE 
    t1.TABLE_SCHEMA = 'public'
ORDER BY
    t1.TABLE_NAME;